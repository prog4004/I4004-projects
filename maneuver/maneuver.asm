; Notes:
; Converted from my Forth RPN version to use a more traditional 4004 assembler.
; Number with $nn are hex numbers.
; Comment lines with numbers ( in hex ) were used to match assembled
;  address locations with the original listing.
; Some of the comment lines make more sense at the end of the previous line.
;  This was because the translator was simplified as most comments follow
;  the assembly line anyway.
; Comments with ?? are locations where the original pdf wasn't clear enough to
;  ensure the value was correct or the context of the code didn't suggect a
;  correct interpretation. Since the program now runs, I believe all of the
;  values I used are now made correct.
; 7 Segment LEDs come in left decimal point and right decimal point. The lines
;  with comments LEFT DECIMAL and RIGHT DECIMAL are the code changes to
;  use either type of LED.
; The display was scanned by the code in the routine DISPLAY This would need
;  to be modified for text output to a terminal
; The original code uses 9 2002s. 5 are 2002-1 and 4 are 2002-2. Both the
;  main RAM and the status bits are used Modifications would be needed to
;  use RAM without status field.
; One of the reference problems in the original text has a different value for
;  the last digit. Since the code works well, it is assumed there was a typo in
;  pdf.
; Using a value of 0 degrees will give a significant error. Use the value of 
;  0.1 of degrees instead. This is assumed to be a divide by 0 issue with fixed
;  value operations. 
;
  R01	EQU	00
  R23	EQU	01
  R45	EQU	02
  R67	EQU	03
  R89	EQU	04
  RAB	EQU	05
  RCD	EQU	06
  REF	EQU	07
   ;single resisters
  R0	EQU	0
  R1	EQU	1
  R2	EQU	2
  R3	EQU	3
  R4	EQU	4
  R5	EQU	5
  R6	EQU	6
  R7	EQU	7
  R8	EQU	8
  R9	EQU	9
  RA	EQU	10
  RB	EQU	11
  RC	EQU	12
  RD	EQU	13
  RE	EQU	14
  RF	EQU	15
                        
   ;JCN condition codes
  NC	EQU	$A	;not carry
  C	EQU	$2	;carry
  T0	EQU	$1	;test = 0
  NT0	EQU	$9	;test <> 0
  NZ	EQU	$C	;not zero
  Z	EQU	$E	;zero
                        
  ORG  $0
  NOP
  ; BLANK DISPLAY
  FIM RCD,  0
  LDM  0
  XCH RB
  LDM  15 
  JMS DORAM
  ; TURN OFF ERROR LIGHT
  FIM RCD,  64
  SRC RCD
  LDM  0
  WRR
  ; FIRST TIME MAKE SURE KEY NOT ALREADY DOWN 
  JUN CHECKNOSTROBE
CHECKSTROBE
  ; 00F 
  JMS DISPLAY
  ; WAIT FOR KEY TO BE DEPRESSED
  FIM RCD,  16
  SRC RCD
  RDR
  RAL
  ; $10 BIT3 IS KEY STROBE 
  JCN NC, CHECKSTROBE
  ; WAIT FOR KEY TO STOP BOUNCING 
  JMS WAIT5
  ; STORE KEY'S 4 BIT DATA
  FIM RAB,  0
  ; 01A
  SRC RAB
  RDR
  XCH RD
  ; KEY DATA IN RD
  ; MAKE SURE KEY STILL DOWN, HENCE DATA GOOD
  SRC RCD
  RDR
  RAL 
  JCN NC, CHECKSTROBE
  XCH R0
  ; HAS SHIFTED $10 INPUT
  ; TURN OFF ERROR LIGHT
  FIM RAB,  64
  SRC RAB
  LDM  0
  WRR
  LD R0
  ; KEY DATA
  ; USE DATA BITS AS TABLE INDEX 
  FIM R01, KEYTABLE
  RAL 
  JCN NC, NUMBERSIDE
  ; BIT2=0 IS NUMBER SIDE 04A + INPUT
  INC R0
  INC R0
  ; MSB +2 FROM 06A + INPUT
NUMBERSIDE
  ; 032
  LD RD
  ; KEY DATA PORT
  CLC
  ADD RD
  ;\ 
  JCN NC, DC1
  ; CARRY INTO TABLE ADDRESS
  INC R0
  ; IN R0
DC1
  ; 038
  CLC
  ADD R1
  XCH R1 
  JCN NC, DC2
  INC R0
  ; CARRY INTO R0 AGAIN
  ; JUMP INTO TABLE
DC2
  ; 03E
  JIN R01
  ; JUMP TO SELECTED KEYBOARD INPUT
  ; ALL TABLE ROUYINES RETURN HERE
CHECKNOSTROBE
  ; 03F 
  JMS DISPLAY
  FIM RCD,  16
  SRC RCD
  ; MAKE SURE KEY HAS BEEN RELEASED
  RDR
  RAL 
  JCN C, CHECKNOSTROBE
  ; IF YES LOOP 
  JUN CHECKSTROBE
  ; THE TABLE
KEYTABLE
  ; 04A 
  JUN CHECKNOSTROBE 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN NUMBR 
  JUN CHECKNOSTROBE 
  JUN DECIMALN 
  JUN CHECKNOSTROBE 
  JUN CLEARKEY 
  JUN CHECKNOSTROBE 
  JUN CHECKNOSTROBE 
  JUN NUMBR 
  JUN COMPUTE 
  JUN OWNSHIP 
  JUN COURSE 
  JUN SAVED 
  JUN SPEED 
  JUN RANGE 
  JUN BEARING 
  JUN TARGETSHIP 
  JUN CHECKNOSTROBE 
  JUN CPA 
  JUN CHECKNOSTROBE 
  JUN SECOND 
  JUN FIRST 
  JUN TIME 
  JUN TARGETNUMBER
  ; TO TRANSFER FROM ONE RAM BLOCK TO ANOTHER
BLOCKTRANS
  ; 08A
  LD RB
  DCL
  SRC R67
  RDM
  XCH R9
  LD RA
  DCL
  SRC RCD
  LD R9
  WRM
  INC R7 
  ISZ RD, BLOCKTRANS
  BBL  0
  ; TO CONVERT TARGET NUMBER TO STORAGE LOCATION
BLOCKSETUP
  ; 098
  CLC
  LDM  7
  SUB RB 
  JCN C, BLK1
  CMA
  XCH RB
  LDM  2
  XCH RA 
  JUN BLKJOIN
BLK1
  ; 0A3
  LDM  1
  XCH RA
BLKJOIN
  ; 0A5
  LD RB
  ADD RB
  ADD R6
  XCH RC
  LDM  0
  XCH RD
  BBL  0
  ; CHANGES F'S TO O'S
UNF
  ; 0AC
  SRC RCD
  RDM
  CMA 
  JCN NZ, FOK
  LDM  0
  WRM
FOK
  ; 0B3 
  ISZ RD, UNF
  BBL  0
  ; DETERMINES IF ENTRE DISPLY OR ONLY PART MUST BE BLANKED
TESTSOL
  ; 0B6
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, TS1
  LDM  0
  WRM
  FIM RCD,  0
  LDM  0
  XCH RB
  LDM  15 
  JMS DORAM
  LDM  0
  WR0
  WR1
  WR2
  BBL  0
TS1
  ; TS1  CA
  FIM RCD,  0
  ; ???? maybe CC but I think it is 00
  LD RA
  XCH RD
  LDM  15 
  JMS DORAM
  BBL  1
  ; D1
  ; BLANKS DISPLAY AND INSERTS NUMBER OF
  ; OBSERVATION TO BE SAVED
SEESAVE
  ; 0D2
  XCH R6
  FIM RCD,  0
  LDM  1
  XCH RB
  LDM  15 
  JMS DORAM
  FIM RCD,  0
  LD R6
  SRC RCD
  WRM
  LDM  0
  WR0
  WR1
  WR2 
  JUN CHECKNOSTROBE
  ORG  $100
  ; RETURNS TO MAIN RAM BANK AND
  ; TURNS ON ERROR LIGHT
BB1
  ; 100
  LDM  0
  DCL
  FIM RAB,  64
  SRC RAB
  LDM  15
  WRR 
  JUN CHECKNOSTROBE
  ; NEED TO CHECK BASE OF NUMBERS
  ; FUNCTIONS PERFORMED BY KEY ROUTINES
  ; DESCRIBED IN APPENDIX B.
  ; FLAGS AS FOLLOWS:
  ; 10 - OWN SHIP COURSE AND SPEED STORAGE FLAG
  ; 11 - OBSERVATION FORMAT FLAG
  ; 12 - COURSE AND SPEED FORMAT FLAG
  ; 13 - DECIMAL POINT FLAG
  ; 14 - CONTACT ID NUMBER SELECTION FLAG
  ; 15 - RANGE SELECTION FLAG
  ; 16 - TIME SELECTION FLAG
  ; 17 - BEARING SELECTION FLAG
  ; 18 - COURSE SELECTION FLAG
  ; 19 - SPEED SELECTION FLAG
  ; 1A - CONTACT ID NUMBER INPUT FLAG
  ; 1B - RANGE INPUT FLAG
  ; 1C - TIME INPUT FLAG
  ; 1D - BEARING INPUT FLAG
  ; 1E - COURSE INPUT FLAG
  ; 1F - SPEED INPUT FLAG
  ; 20 - SOLUTION FLAG
COMPUTE
  ; 109
  FIM RCD,  16
  SRC RCD
  RDM 
  JCN Z, BB1
  FIM RCD,  18
  SRC RCD
  RDM 
  JCN NZ, BB1
  FIM RCD,  20
  SRC RCD
  RDM 
  JCN Z, BB1
  FIM RCD,  26
  SRC RCD
  RDM 
  JCN Z, BB1
  LDM  13
  XCH RB
COMCHECK
  ; 123
  INC RD
  SRC RCD
  RDM 
  JCN NZ, BB1 
  ISZ RB, COMCHECK
  LDM  0
  XCH R6
  FIM RCD,  15
  SRC RCD
  RDM
  XCH RB
  LDM  15
  WRM 
  JMS BLOCKSETUP
  LD RA
  DCL
  SRC RCD
  RD0 
  JCN Z, BB1
  INC RC
  SRC RCD
  RD0 
  JCN Z, BB1
  LDM  0
  WR0
  LD RC
  XCH R6
  LD RD
  XCH R7
  LD RA
  XCH RB
  LDM  0
  XCH RA
  FIM RCD,  224
  ; ???? BC?EC?E0 
  JMS BLOCKTRANS
  LD R6
  DAC
  XCH R6
  SRC R67
  LDM  0
  WR0
  FIM RCD,  240 
  JMS BLOCKTRANS
  FIM RAB,  208
  FIM RCD,  224 
  JMS STATUSIN
  FIM RAB,  214
  FIM RCD,  240 
  JMS STATUSIN 
  JUN CPACOMPUTE
CPARETURN
  ; 166
  FIM RAB,  224
  FIM RCD,  208 
  JMS STATUSOUT
  FIM RAB,  240
  FIM RCD,  214 
  JMS STATUSOUT
  FIM RCD,  16
  SRC RCD
  LDM  15
  WRM
  INC RD 
  JMS ZERORAM
  INC RC
  SRC RCD
  LDM  15
  WRM
  LDM  0
  XCH R2
  FIM R45,  224
  FIM R67,  0 
  JMS TRANSLOOP
  LDM  0
  WR0
  WR3
  LDM  2
  WR1
  WR2
  FIM REF,  0 
  JUN CHECKNOSTROBE
NUMBR
  ; 190
  LD R7 
  JCN Z, BB1
  INC R7
  FIM RAB,  19
  SRC RAB
  RDM 
  JCN Z, NORMAL
  LD R9
  DAC
  XCH R9
  SRC R89
  LD RD
  WRM 
  JUN CHECKNOSTROBE
NORMAL
  ; 1A2
  LD R5
  XCH R4
  LD R9
  XCH R3
SHUFFLE
  ; 1A6
  SRC R23
  RDM
  XCH RD
  WRM
  INC R3 
  ISZ R4, SHUFFLE
  LD R6 
  JCN Z, NOSET
  INC R6
  LD R6 
  JCN NZ, NOSET
  LDM  10
  XCH RB
  FIM RCD,  20
SEARCHHISTORY
  ; 1B8
  SRC RCD
  RDM 
  JCN NZ, SETHISTORY
  INC RD 
  ISZ RB, SEARCHHISTORY
SETHISTORY
  ; 1BF
  CLC
  LDM  6
  ADD RD
  XCH RD
  SRC RCD
  LDM  15
  WRM
NOSET
  ; 1C6 
  JUN CHECKNOSTROBE
DECIMALN
  ; 1C8
  LD R6 
  JCN NZ, BB1
  FIM RCD,  19
  SRC RCD
  RDM 
  JCN NZ, BB1
  FIM RCD,  22
  SRC RCD
  RDM 
  JCN Z, DCM1
  SRC REF
  LDM  2
  ; LEFT DECIMAL
  ;  1 LDM  \ RIGHT DECIMAL
  WR2 
  JUN DCMJOIN
DCM1
  ; 1DC  ??
  INC RD
  SRC RCD
  RDM 
  JCN Z, DCM2
  SRC REF
  LDM  2
  ; LEFT DECIMAL
  ;  1 LDM  \ RIGHT DECIMAL
  WR1 
  JUN DCMJOIN
DCM2
  ; 1E6
  INC RD
  SRC RCD
  RDM 
  JCN Z, DCM3
  SRC REF
  LDM  2
  ; LEFT DECIMAL
  ;  1 LDM  \ RIGHT DECIMAL
  WR1 
  JUN DCMJOIN
DCM3
  ; 1F0
  INC RD
  SRC RCD
  RDM 
  JCN Z, BB1
  SRC REF
  LDM  8
  ; LEFT DECIMAL
  ;  4 LDM  \ RIGHT DECIMAL
  WR0
DCMJOIN
  ; 1F8
  FIM RCD,  19
  SRC RCD
  LDM  15
  WRM
  XCH R7 
  JUN CHECKNOSTROBE
  ORG  $200
BB2
  ; 200
  LDM  0
  DCL
  FIM RAB,  64
  SRC RAB
  LDM  15
  WRR 
  JUN CHECKNOSTROBE
OWNSHIP
  ; 209
  FIM RCD,  16
  SRC RCD
  RDM 
  JCN Z, NEEDBOTH
  FIM RCD,  30
  SRC RCD
  RDM
  XCH R4
  LD R4 
  JCN Z, BOTHBLANK
  FIM RAB,  6
  FIM RCD,  214
  LDM  12
  XCH RF 
  JMS TRANSPART
BOTHBLANK
  ; 21F
  FIM RCD,  31
  SRC RCD
  LD R4
  CLC
  ADM 
  JCN Z, BB2
  RDM
  XCH R4
  LDM  1
  DCL
  FIM RCD,  12
  ; LOOKS LIKE A 0C
  LDM  0
VITIATE1
  ; 22E
  SRC RCD
  WR0 
  ISZ RC, VITIATE1
  LDM  2
  DCL
  LDM  0
VITIATE2
  ; 235
  SRC RCD
  WR0
  INC RC 
  ISZ RD, VITIATE2
  LDM  0
  DCL
  LD R4 
  JCN Z, JOINOS
  FIM RAB,  0
  FIM RCD,  208
  LDM  13
  XCH RF 
  JMS TRANSPART 
  JUN JOINOS
NEEDBOTH
  ; 249
  FIM RCD,  30
  SRC RCD
  RDM 
  JCN Z, BB2
  INC RD
  ; ??
  SRC RCD
  RDM 
  JCN Z, BB2
  FIM R45,  0
  FIM R67,  208 
  JMS TRANSLOOP
JOINOS
  ; 25A
  FIM RCD,  16
  SRC RCD
  LDM  15
  WRM
  INC RD 
  JMS ZERORAM
  FIM RCD,  208 
  JMS UNF
  FIM R67,  0
  FIM RCD,  0
  LDM  0
  XCH RB
  LDM  15 
  JMS DORAM
  LDM  0
  WR0
  WR1 
  JUN CHECKNOSTROBE
COURSE
  ; 274
  FIM RCD,  17
  SRC RCD
  RDM 
  JCN NZ, BB2
  LD R6 
  JCN Z, COURSEOK
  FIM RCD,  24
  SRC RCD
  RDM 
  JCN Z, BB2
COURSEOK
  ; 283 
  JMS UNSET7
  FIM RCD,  18
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  24
  SRC RCD
  WRM
  FIM RCD,  30
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  108
  ; 60??? 
  JMS TESTSOL
  LDM  0
  WR1
  FIM R67,  253
  FIM R45,  13
  FIM R89,  7 
  JUN CHECKNOSTROBE
FIRST
  ; 2A1
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, SETCHECK1
  LDM  1 
  JUN SEESAVE
SETCHECK1
  ; 2AA 
  JMS SAME12 
  JMS BLOCKSETUP
SAMEFS
  ;\
  LDM  0
  XCH RB
  FIM R67,  0 
  JMS BLOCKTRANS 
  JMS UNF
  LDM  15
  WR0
  LDM  0
  DCL
  FIM RCD,  17 
  JMS ZERORAM
  FIM RCD,  0
  LDM  0
  XCH RB
  LDM  15 
  JMS DORAM
  LDM  0
  WR1
  WR2
  FIM R67,  0 
  JUN CHECKNOSTROBE
SECOND
  ; 2CC
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, SETCHECK2
  LDM  2 
  JUN SEESAVE
SETCHECK2
  ; 2D5 
  JMS SAME12 
  JMS BLOCKSETUP
  LD RA
  DCL
  SRC RCD
  RD0 
  JCN Z, BB2
  INC RC 
  JUN SAMEFS
SAME12
  ; 2E2
  LDM  12
  XCH RB
  FIM RCD,  26
ALLIN
  ; 2E6
  SRC RCD
  RDM 
  JCN Z, BB2
  INC RD 
  ISZ RB, ALLIN
  LDM  0
  XCH R6
  FIM RCD,  15
  SRC RCD
  RDM
  XCH RB
  BBL  0
  ORG  $300
BB3
  ; 300
  FIM RAB,  64
  SRC RAB
  LDM  15
  WRR 
  JUN CHECKNOSTROBE
TARGETNUMBER
  ; 307
  FIM RCD,  18
  SRC RCD
  RDM 
  JCN NZ, BB3
  LD R6 
  JCN Z, NOK
  FIM RCD,  20
  SRC RCD
  RDM 
  JCN Z, BB3
NOK
  ; 316 
  JMS UNSET7
  FIM RCD,  17
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  20
  SRC RCD
  WRM
  FIM RCD,  26
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  255 
  JMS TESTSOL
  FIM R67,  255
  FIM R45,  15
  FIM R89,  15 
  JUN CHECKNOSTROBE
RANGE
  ; 332
  FIM RCD,  18
  SRC RCD
  RDM 
  JCN NZ, BB3
  LD R6 
  JCN Z, RANGEOK
  FIM RCD,  21
  SRC RCD
  RDM 
  JCN Z, BB3
RANGEOK
  ; 341 
  JMS UNSET7
  FIM RCD,  17
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  21
  SRC RCD
  WRM
  FIM RCD,  27
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  10 
  JMS TESTSOL
  FIM R67,  250
  FIM R45,  10
  FIM R89,  0 
  JUN CHECKNOSTROBE
BEARING
  ; 35D
  FIM RCD,  18
  SRC RCD
  RDM 
  JCN NZ, BB3
  LD R6 
  JCN Z, BEARINGOK
  FIM RCD,  23
  SRC RCD
  RDM 
  JCN Z, BB3
BEARINGOK
  ; 36C 
  JMS UNSET7
  FIM RCD,  17
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  23
  SRC RCD
  WRM
  FIM RCD,  29
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  108 
  JMS TESTSOL
  LDM  0
  WR1
  FIM R67,  253
  FIM R45,  13
  FIM R89,  7 
  JUN CHECKNOSTROBE
TIME
  ; 38A
  FIM RCD,  18
  SRC RCD
  RDM 
  JCN NZ, BB3
  LD R6 
  JCN Z, TIMEOKOK
  FIM RCD,  22
  SRC RCD
  RDM 
  JCN Z, BB3
TIMEOKOK
  ; 399 
  JMS UNSET7
  FIM RCD,  17
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  22
  SRC RCD
  WRM
  FIM RCD,  28
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  171 
  JMS TESTSOL
  LDM  0
  WR2
  FIM R67,  252
  ; F0 FC ???  3AE FAILS f0
  FIM R45,  12
  FIM R89,  11 
  JUN CHECKNOSTROBE
SPEED
  ; 3B7
  FIM RCD,  17
  SRC RCD
  RDM 
  JCN NZ, BB3
  LD R6 
  JCN Z, SPEEDOK
  FIM RCD,  25
  SRC RCD
  RDM 
  JCN Z, BB3
SPEEDOK
  ; 3C6 
  JMS UNSET7
  FIM RCD,  18
  SRC RCD
  LDM  15
  WRM
  FIM RCD,  25
  SRC RCD
  WRM
  FIM RCD,  31
  SRC RCD
  LDM  0
  WRM
  FIM RAB,  13 
  JMS TESTSOL
  LDM  0
  WR0
  FIM R67,  254
  FIM R45,  14
  FIM R89,  1 
  JUN CHECKNOSTROBE
  ; ZEROS FLAGS 13 THRU 19
UNSET7
  ; 3E4
  FIM RCD,  19
  LDM  9
  XCH RB
  LDM  0 
  JMS DORAM
  BBL  0
  ORG  $400
BB4
  ; 400
  FIM RAB,  64
  SRC RAB
  LDM  15
  WRR 
  JUN CHECKNOSTROBE
SAVED
  ; 407
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, BB4
  LD R6 
  JCN Z, BB4
  DAC
  XCH R6
  FIM RCD,  15
  SRC RCD
  RDM
  XCH RB 
  JMS BLOCKSETUP
  LD RA
  DCL
  LD R6 
  JCN NZ, SAVEIT
  SRC RCD
  LDM  15
  WR0 
  JUN SAVEND
SAVEIT
  ; 423
  LD RC
  XCH R4
  LD RC
  DAC
  XCH R6
  LDM  0
  XCH RD
  LDM  0
  XCH R7 
  JMS TRANSLOOP
  LDM  0
  XCH R6
SAVEND
  ; 430
  LDM  15
  WR0
  LDM  0
  DCL
  FIM RCD,  0
  SRC RCD
  LDM  15
  WRM 
  JUN CHECKNOSTROBE
CPA
  ; 43B
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, BB4
  FIM R45,  224
  FIM R67,  0 
  JMS TRANSLOOP
  LDM  0
  WR0
  LDM  2
  WR1
  WR2 
  JUN CHECKNOSTROBE
TARGETSHIP
  ; 44E
  FIM RCD,  32
  SRC RCD
  RDM 
  JCN Z, BB4
  FIM R45,  240
  FIM R67,  0 
  JMS TRANSLOOP
  LDM  8
  WR0
  LDM  2
  WR1
  LDM  0
  WR2 
  JUN CHECKNOSTROBE
  ; TRANSFERS COURSE AND SPEED DATA TO
  ; RAM REGISTER E ANF F STATUS CHARACTERS
STATUSIN
  ; 462
  SRC RAB
  RDM
  SRC RCD
  WR0
  INC RB
  SRC RAB
  RDM
  SRC RCD
  WR1
  INC RB
  SRC RAB
  RDM
  SRC RCD
  WR2
  INC RB
  SRC RAB
  RDM
  SRC RCD
  WR3
  BBL  0
  ; TRANSFERS COURSE AND SPEED DATA OUT OF
  ; STATUS CHARACTERS INTO WORKING REGISTERS
STATUSOUT
  ; 476
  SRC RAB
  RD0
  SRC RCD
  WRM
  INC RD
  SRC RAB
  RD1
  SRC RCD
  WRM
  INC RD
  SRC RAB
  RD2
  SRC RCD
  WRM
  INC RD
  SRC RAB
  RD3
  SRC RCD
  WRM
  BBL  0
  ; LOOPS APPROX. 5 MILLISECS
WAIT5
  ; 48A
  LDM  0
  XCH RA
  LDM  0
  XCH RB
WAIT5LOOP
  ; 48E 
  ISZ RB, WAIT5LOOP 
  ISZ RA, WAIT5LOOP
  BBL  0
  ; THE DISPAY CONSISTS OF 16 LED'S AND A 16-BIT SHIFT
  ; REGISTER. A ROM PORT IS USED TO SEND THE BCD
  ; INFORMATION TO THE 7447 DECODERS FOR ALL 16 LED'S
  ; AT THE SAME TIME. tHE SHIFT REGISTER IS USED TO
  ; ENABLE ONLY ONE OF THESE LED'S AT A PARTICULAR
  ; TIME. ROM PORT 0 IS USED FOR THE DISPLAY CHARACTER.
  ; ROM PORT 1 IS USED FOR CONTROL.: THE HIGH ORDER BIT
  ; IS USED FOR THE DECIMAL POINT (1 MEANS OFF), THE
  ; NEXT BIT IS USED TO CLOCK THE SHIFT REGISTER
  ; ( A CHANGE FROM 1 TO 0 CAUSES THE REGISTER TO SHIFT),
  ; AND THE LOW ORDER BIT IS THE SHIFT REGISTER DATA
  ; BIT. A 0 IN THE SHIFT REGISTER ENABLES AN LED,
  ; A 1 DISABLES. THE ROUTINE IS WRITTEN SUCH THAT
  ; A SINGLE 0 IS SGIFTING ACROSS THE REGISTER,
  ; ENABLING EACH LED IN TURN ;
DISPLAY
  ; 493
  ; INITIALIZE
  ;  00 RAM1R FIM  \ MISSING CODE? DIDN'T DO DP CORECTLY
  LDM  0
  XCH R8
  ; BCD PORT
  LDM  1
  XCH RA
  ; CONTROL PORT
  LDM  0
  XCH R0
  FIM RCD,  204
  ; CC NOT 00!! 4 X 4 FOR THE LOOPS
  ; LOOP COUNTERS
  SRC REF
  RD0
  XCH R1
  RD1
  XCH R3
  RD2
  XCH R4
  RD3
  XCH RB
  ; CLOCK SHIFT REGISTER
CLOK
  ; 4A4
  CLB
  LDM  4
  ADD R0
  SRC RAB
  WRR
  ; CLOCK NOW HIGH
  ; BLANK DISPLAY DURING SHIFT
  LDM  15
  SRC R89
  WRR
  ; HANDLE DECIMAL POINT
  LD R0
  RAL
  STC
  RAR
  XCH R0
  LD R1
  RAL
  XCH R1 
  JCN NC, DCLCK
  LD R0
  RAL
  CLC
  RAR
  XCH R0
  ; DROP CLOCK
DCLCK
  ; 4BB
  SRC RAB
  LD R0
  WRR
  ; SEND RAM DIGIT
  SRC REF
  RDM
  SRC R89
  WRR
  INC RF
  LD R0
  RAR
  STC
  RAL
  XCH R0
  ; WAIT A WHILE
  LDM  0
  XCH R2
WAITMS
  ; 4CA 
  ISZ R2, WAITMS
  ; LOOP BACK TO DISPLAY REMAINING DIGITS 
  ISZ RC, CLOK
  LD R3
  XCH R1
  LD R4
  XCH R3
  LD RB
  XCH R4
  LDM  12
  XCH RC 
  ISZ RD, CLOK
  SRC RAB
  LDM  13
  WRR
  LDM  9
  WRR
  BBL  0
CLEARKEY
  ; 4DE
  FIM RCD,  0
  LDM  0
  XCH RB
  LDM  15 
  JMS DORAM
  LDM  0
  WR0
  WR1
  WR2
  FIM RCD,  17 
  JMS ZERORAM
  FIM R67,  0 
  JUN CHECKNOSTROBE
  ; END CONTROL PROGRAM
  ORG  $500
  ; MANEUVERING BOARD ALGORITHM
  ; INPUT TIMES RANGES BEARINGS. CONVERT TO
  ; RECTANGLAR COORDS
CPACOMPUTE
  ; 500
  FIM RAB,  246
  ; F0 HAS 1ST
  FIM RCD,  0 
  JMS LOADBRG
  ; 506 
  JMS CORDIC
  FIM RAB,  240
  FIM RCD,  48 
  JMS LOADRNG
  FIM R23,  48
  ; RANGE 1ST
  FIM R45,  16
  ; COS
  FIM R67,  128
  ; RESULT X 1ST 
  JMS MLRT
  FIM R23,  48
  ; RANGE 1ST
  FIM R45,  32
  ; SIN
  FIM R67,  144
  ; RESULT Y 1ST 
  JMS MLRT
  FIM RAB,  230
  ; E0 HAS 2ND
  SRC RAB
  LDM  0
  WR3
  ; GUESS IT IS A FLAG TO SHOW CALCUATED
  FIM RCD,  0 
  JMS LOADBRG
  ; 527 
  JMS CORDIC
  FIM RAB,  224
  FIM RCD,  48 
  JMS LOADRNG
  FIM R23,  48
  FIM R45,  16
  FIM R67,  96
  ; RESULT X 2ND 
  JMS MLRT
  FIM R23,  48
  FIM R45,  32
  FIM R67,  112
  ; RESULT Y 2ND 
  JMS MLRT
  FIM R45,  96
  FIM R67,  16
  ; RESULT X 2ND 
  JMS TRANSLOOP
  FIM R45,  112
  FIM R67,  32
  ; RESULT Y 2ND 
  JMS TRANSLOOP
  ; COMPUTE X,Y COORDINATES OF RELATIVE
  ; MOTION LINE
  ; 54B
  FIM R01,  16
  ; 2ND X
  FIM R23,  128
  ; 1ST X 
  JMS SBRT
  ; DX
  FIM R01,  32
  FIM R23,  144 
  JMS SBRT
  ; DY
  ; 557
  ; IF Y COORD > X COORD ROTATE POSITS +90
  ; TO AVOID POSSIBLE INFINITE SLOPE OF
  ; RELATIVE MOTION LINES
  FIM R45,  32
  FIM R67,  160
  ; DY 
  JMS TRANSLOOP
  ; 55D
  RD0
  RAR 
  JCN NC, POSY
  ; 561
  FIM R01,  160 
  JMS CPLRT
POSY
  ; 565
  FIM R45,  16
  FIM R67,  176
  ; DX 
  JMS TRANSLOOP
  ; 56B
  RD0
  RAR 
  JCN NC, POSX
  ; ??
  ; 56F
  FIM R01,  176 
  JMS CPLRT
POSX
  ; 573
  FIM R01,  160
  ; DY
  FIM R23,  176
  ; DX 
  JMS SBRT
  ; 579
  RD0
  RAR 
  JCN C, NOROTATE
  ; ?? 
  JMS REVOLVE
  ; COMPUTE SLOPE OF RELATIVE MOTION LINE
NOROTATE
  ; 57F
  FIM R23,  32
  FIM R67,  16
  FIM R89,  112
  FIM R45,  160 
  JMS DVRT
  ; 589
  ; COMPUTE DRM AND SRM 
  JMS CORDICAT
  ; 00 ANGLE
  ; 58B
  FIM RAB,  234
  FIM RCD,  48 
  JMS LOADTIMELO
  FIM RAB,  250
  FIM RCD,  64 
  JMS LOADTIMELO
  FIM R45,  80 
  FIM R01, HRSPERMIN 
  JMS FERT
  FIM R23,  48
  FIM R45,  80
  FIM R67,  160 
  JMS MLRT
  FIM R23,  64
  FIM R45,  80
  FIM R67,  176 
  JMS MLRT
  FIM RAB,  237
  FIM RCD,  160 
  JMS LOADTIMEHI
  FIM RAB,  253
  FIM RCD,  176 
  JMS LOADTIMEHI
  ; 5B9
  FIM R01,  160
  ; 2ND TIME IN HOURS
  FIM R23,  176
  ; 1ST TIME 
  JMS SBRT
  ; A0 DT
  ; 5C3
  RD0
  RAR 
  JCN NC, TIMECK
  ; ???
  FIM R45,  192 
  FIM R01, DAY 
  JMS FERT
  FIM R01,  160
  FIM R23,  192
  ; C0 00 ?? 5CB 
  JMS ADRT
  ; COMPUTE CPA POINT IN RECTANGULAR
  ; COORDINATES
TIMECK
  ; 5CF
  FIM R23,  32
  ; DX>Y
  FIM R67,  160
  ; DT
  FIM R89,  192
  ; RATE
  FIM R45,  208
  ;\ 
  JMS DVRT
  ; 5D9
  FIM R45,  112
  ; X/Y
  FIM R67,  80 
  JMS TRANSLOOP
  FIM R23,  112
  ; X/Y
  FIM R45,  80
  ; X/Y
  FIM R67,  208 
  JMS MLRT
  ; D0 IS SLOPE^2
  ; 5E7
  FIM R23,  128
  ; 1ST X
  FIM R45,  208
  ; SLOPE^2
  FIM R67,  80 
  JMS MLRT
  ; SLOPE^2 * 1ST X
  ; 5EF
  LDM  9
  XCH R5
  SRC R45
  LDM  1
  WRM
  ; WAS LIKE ADD 1 TO SLOPE^2 ??
  FIM R23,  144
  ; DY
  FIM R45,  112
  ; X/Y
  FIM R67,  48 
  JMS MLRT
  ; DY * X/Y
  ; 5FC
  FIM R01,  80
  FIM R23,  48 
  JMS SBRT
  ; 602
  FIM R23,  128
  FIM R45,  112
  FIM R67,  64 
  JMS MLRT
  ; 60A
  FIM R45,  144
  ; DY?
  FIM R67,  48 
  JMS TRANSLOOP
  ; 610
  FIM R01,  48
  FIM R23,  64 
  JMS SBRT
  ; 616
  FIM R23,  80
  FIM R67,  208
  FIM R89,  16
  FIM R45,  64 
  JMS DVRT
  ; 620
  FIM R23,  48
  FIM R67,  208
  FIM R89,  32
  FIM R45,  64 
  JMS DVRT
  ; 62A
  FIM R45,  96
  FIM R67,  160 
  JMS TRANSLOOP
  FIM R01,  160
  FIM R23,  128 
  JMS SBRT
  ; 636
  RD0
  XCH RE
  ; TEST FOR FAST-CPA
  FIM R45,  16
  FIM R67,  160 
  JMS TRANSLOOP
  ; 63E
  FIM R23,  96 
  JMS SBRT
  ; 642
  NOP
  ; 643
  RD0
  CLC
  ADD RE
  RAR
  ; 647 
  JCN NC, FINDCPA
  ; ??
  ; PAST-CPA INDICATED BY ALL F'S OUTPUT
  LDM  15
  FIM R01,  224
FLOOP
  ;\
  SRC R01
  WRM 
  ISZ R1, FLOOP
  FIM R45,  0
  FIM R67,  160 
  JMS TRANSLOOP
  ; IF PAST-CPA COMPUTE TARGET
  ; COURSE AND SPEED 
  JUN FINDCANDS
  ; ELSE COMPUTE CPA BEARING, RANGE AND TIME
FINDCPA
  ; 658
  FIM R45,  16
  FIM R67,  96 
  JMS TRANSLOOP
  FIM R45,  32
  FIM R67,  112 
  JMS TRANSLOOP
  FIM R45,  0
  FIM R67,  160 
  JMS TRANSLOOP 
  JMS CORDICAT
  ; IF POSITIONS ROTATED, ROTATE CPA BEARING
  ;  MINUS 90 DEGREES
  FIM RAB,  224
  SRC RAB
  RD3 
  JCN Z, NOBACKROTATE1
  FIM R45,  48 
  FIM R01, MINPI2 
  JMS FERT
  FIM R01,  0
  FIM R23,  48 
  JMS ADRT
  SRC R01
  RD0
  RAR 
  JCN NC, NOBACKROTATE1
  FIM R45,  48 
  FIM R01, TWOPI 
  JMS FERT
  FIM R01,  0
  FIM R23,  48
  ; 0 ??????? 
  JMS ADRT
  ; PUT VALUES INTO OUTPUT FOR CPA BEARING
  ;  AND RANGE
NOBACKROTATE1
  ; 68F
  FIM RAB,  8
  FIM RCD,  230
  LDM  12
  XCH RF 
  JMS TRANSPART
  FIM RAB,  41
  FIM RCD,  224
  LDM  10
  XCH RF 
  JMS TRANSPART
  FIM RCD,  229
  LDM  11
  XCH RB 
  JMS FBACK
  FIM R45,  96
  FIM R67,  16 
  JMS TRANSLOOP
  FIM R45,  112
  FIM R67,  32 
  JMS TRANSLOOP
  FIM R01,  16
  FIM R23,  128 
  JMS SBRT
  FIM R01,  32
  FIM R23,  144 
  JMS SBRT 
  JMS CORDICAT
  FIM R23,  32
  FIM R67,  192
  ; C0 00 ?? 6C1 0 MESSES THE TIME
  FIM R89,  0
  FIM R45,  16 
  JMS DVRT
  FIM R01,  176
  FIM R23,  0
  ; TRY C0 REALLY MESSES THE TIME 
  JMS ADRT
  ; CONVERT CPA TIME TO PRCPER HRS AND MINS AND STORE
  FIM R45,  176
  FIM R67,  0 
  JMS TRANSLOOP
  FIM R45,  16 
  FIM R01, DAY 
  JMS FERT
  FIM R01,  0
  FIM R23,  16 
  JMS SBRT
  RD0
  RAR 
  JCN C, GOCDTIME
  ; ???
  FIM R45,  0
  FIM R67,  176 
  JMS TRANSLOOP
GOCDTIME
  ; 6EB
  FIM RAB,  185
  FIM RCD,  237
  LDM  14
  XCH RF
HROUT
  ; 6F1
  SRC RAB
  RDM
  XCH RE
  LDM  0
  WRM
  ;\
  LD RE
  SRC RCD
  WRM
  INC RB
  INC RD 
  ISZ RF, HROUT
  FIM RCD,  0 
  JMS ZERORAM
  LDM  6
  FIM RCD,  10
  SRC RCD
  WRM
  FIM R23,  0
  FIM R45,  176
  FIM R67,  16 
  JMS MLRT
  FIM RAB,  24
  FIM RCD,  234
  LDM  13
  XCH RF 
  JMS TRANSPART
  ; COMPUTE TARGET COURSE AND SPEED
FINDCANDS
  ; 716
  FIM RAB,  224
  SRC RAB
  RD3 
  JCN Z, NOBACKROTATE2
  FIM R45,  0 
  FIM R01, MINPI2 
  JMS FERT
  FIM R01,  160
  FIM R23,  0 
  JMS ADRT
  SRC R01
  RD0 
  JCN NC, NOBACKROTATE2
  ; ???
  FIM R45,  0 
  FIM R01, TWOPI 
  JMS FERT
  FIM R01,  160
  FIM R23,  0 
  JMS ADRT
NOBACKROTATE2
  ; 738
  SRC RAB
  LDM  0
  WR3
  FIM RCD,  0
  FIM RAB,  246
  SRC RAB
  RD0
  WRM
  INC RB
  SRC RAB
  RD1
  WRM
  INC RB
  SRC RAB
  RD2
  WRM
  INC RB
  SRC RAB
  RD3
  WRM
  FIM RAB,  246 
  JMS LOADBRG 
  JMS CORDIC
  FIM RAB,  224
  FIM RCD,  0 
  JMS ZERORAM
  FIM RCD,  12
  ; ???? 75A
  SRC RCD
  LDM  2
  WRM
  FIM RCD,  64 
  JMS ZERORAM
  LDM  8
  XCH RD
  SRC RAB
  RD0
  SRC RCD
  WRM
  INC RD
  SRC RAB
  RD1
  SRC RCD
  WRM
  INC RD
  SRC RAB
  RD2
  SRC RCD
  WRM
  FIM R23,  64
  FIM R45,  0
  FIM R67,  48 
  JMS MLRT
  FIM R23,  48
  FIM R45,  16
  FIM R67,  96 
  JMS MLRT
  FIM R23,  48
  FIM R45,  32
  FIM R67,  112 
  JMS MLRT
  FIM R45,  160
  FIM R67,  0 
  JMS TRANSLOOP 
  JMS CORDIC
  FIM R23,  192
  ; ??? 793
  FIM R45,  16
  FIM R67,  128
  ; 7BD 
  JMS MLRT
  FIM R23,  192
  ; ???
  FIM R45,  32
  FIM R67,  144 
  JMS MLRT
  FIM R45,  128
  FIM R67,  16 
  JMS TRANSLOOP
  FIM R45,  144
  FIM R67,  32 
  JMS TRANSLOOP
  FIM R01,  16
  FIM R23,  96 
  JMS ADRT
  FIM R01,  32
  FIM R23,  112 
  JMS ADRT 
  JMS CORDICAT
  ; OUTPUT TARGET COURSE AND SPEED
  FIM RCD,  240
  LDM  1
  XCH RB
  LDM  15 
  JMS DORAM
  FIM RAB,  8
  FIM RCD,  246
  LDM  12
  XCH RF 
  JMS TRANSPART
  FIM RCD,  16 
  JMS ZERORAM
  LDM  5
  FIM RCD,  21
  SRC RCD
  WRM
  FIM R23,  32
  FIM R45,  16
  ; c 0 ?
  FIM R67,  48 
  JMS MLRT
  FIM RAB,  56
  FIM RCD,  240
  LDM  13
  XCH RF 
  JMS TRANSPART
  FIM RCD,  242
  LDM  14
  XCH RB 
  JMS FBACK
ATLASTOHATLAST
  ; 7EB 
  JUN CPARETURN
  ; END MANEUVERING BCARD ALGORITHM
  ; ROTATES POSITIONS PLUS 90 DEGREES
REVOLVE
  ; 7ED
  FIM R45,  16
  FIM R67,  48 
  JMS TRANSLOOP
  FIM R45,  32
  FIM R67,  16 
  JMS TRANSLOOP
  FIM R01,  16 
  JMS CPLRT
  FIM R45,  48
  FIM R67,  32 
  JMS TRANSLOOP
  FIM R01,  112 
  JMS CPLRT
  FIM R45,  112
  FIM R67,  96 
  JMS TRANSLOOP
  FIM R45,  128
  FIM R67,  48 
  JMS TRANSLOOP
  FIM R45,  144
  FIM R67,  128 
  JMS TRANSLOOP
  FIM R01,  128 
  JMS CPLRT
  FIM R45,  48
  FIM R67,  144 
  JMS TRANSLOOP
  LDM  15
  FIM R01,  224
  SRC R01
  WR3
  BBL  0
  ; ZEROES A RAM REGISTER AND ITS SIGN
ZERORAM
  ; 829
  CLB
ZRAM
  ; 82A
  SRC RCD
  WRM 
  ISZ RD, ZRAM
  WR0
  BBL  0
  ; TRANSFERS BEARING FROM STORAGE TO
  ;  WORKING REGISTER
LOADBRG
  ; 830 
  JMS ZERORAM
  LDM  8
  XCH RD
  LDM  12
  XCH RF 
  JMS TRANSPART
  BBL  0
  ; TRANSFERS RANGE FROM STORAGE TO
  ;  WORKING REGISTER
LOADRNG
  ; 839 
  JMS ZERORAM
  LDM  9
  XCH RD
  LDM  10
  XCH RF 
  JMS TRANSPART
  BBL  0
  ; TRANSFERS PART OF REGISTER TO ANOTHER
TRANSPART
  ; 842
  SRC RAB
  RDM
  SRC RCD
  WRM
  INC RB
  INC RD 
  ISZ RF, TRANSPART
  BBL  0
  ; TRANSFERS MINUTES FROM STORAGE TO
  ; WORKING REGISTER
LOADTIMELO
  ; 84B 
  JMS ZERORAM
  LDM  8
  XCH RD
  LDM  13
  XCH RF 
  JMS TRANSPART
  BBL  0
  ; TRANSFER HOURS FROM STORAGE TO
  ; WORKING REGISTER
LOADTIMEHI
  ; 854
  LDM  9
  XCH RD
  LDM  14
  XCH RF 
  JMS TRANSPART
  BBL  0
  ; LOADS PART OF REGISTER WITH CHARACTER
  ; IN ACCUMULATOR
DORAM
  ; 85B
  SRC RCD
  WRM
  INC RD 
  ISZ RB, DORAM
  BBL  0
  ; CHANGES LEADING ZEROES TO BLANKS ON DISPLAY
FBACK
  ; 861
  SRC RCD
  RDM 
  JCN NZ, NONZERO
  LDM  15
  WRM
  LD RD
  DAC
  XCH RD 
  ISZ RB, FBACK
NONZERO
  ; 86C
  BBL  0
  ; SETS UP SUBLOOP COUNT 7,9,9,10 FOR
  ;  CORDIC ROUTINES AND FETCHES ARCTANGENT
  ;  CONSTANTS FROM ROM
SETUP
  ; 86D
  LD RC
  RAR 
  JCN C, SETUP1
  ; ????
  RAR 
  JCN C, SETUP2
  RAR 
  JCN C, SETUP3
  RAR 
  JCN C, SETUP4
FALLTHRU5
  ; 87A
  FIM R45,  80 
  FIM R01, A5 
  JMS FERT
  LDM  6
  XCH RE
  BBL  12
SETUP1
  ; 883
  LDM  2
  XCH RC
  FIM R45,  80 
  FIM R01, A1 
  JMS FERT
  LDM  15
  XCH RE
  BBL  0
SETUP2
  ; 88E
  LDM  4
  XCH RC
  FIM R45,  80 
  FIM R01, A2 
  JMS FERT
  LDM  9
  XCH RE
  BBL  15
SETUP3
  ; 899
  LDM  8
  XCH RC
  FIM R45,  80 
  FIM R01, A3 
  JMS FERT
  LDM  7
  XCH RE
  BBL  14
SETUP4
  ; 8A4
  LDM  0
  XCH RC
  FIM R45,  80 
  FIM R01, A4 
  JMS FERT
  LDM  7
  XCH RE
  BBL  13
  ; 8AF-8B0
  ;\
  ;\
  ; DIVICE ROUTINE, SETS UP TO USE DECDIV
DVRT
  ; 8AF
  SRC R23
  RD0
  RAR 
  JCN NC, DV4
  LD R2
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  STC
  LDM  1
  WR1
DV4
  ; 8BD
  RAL
  XCH RF
  SRC R67
  ; c 0R 0
  RD0
  RAR 
  JCN NC, DV6
  ; ???
  LD R6
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  STC
  LDM  1
  WR1
DV6
  ; 8CD
  RAL
  CLC
  ADD RF
  SRC R89
  WR0 
  JMS DECDIV
CHKPT
  ; 8D4
  SRC R23
  RD1 
  JCN Z, DV1
  LD R2
  XCH R0
  LDM  0
  WR1
  XCH R1 
  JMS CPLRT
DV1
  ; 8DF
  SRC R67
  ; ????
  RD1 
  JCN Z, DV2
  LD R6
  XCH R0
  LDM  0
  WR1
  XCH R1 
  JMS CPLRT
DV2
  ; 8EA
  SRC R89
  RD0
  RAR 
  JCN NC, ATLASTDIV
  ; ???
  CLC
  RAL
  WR0
  LD R8
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
ATLASTDIV
  ;\
  BBL  0
  ORG  $900
  ; CORDIC ROTATIOM MODE FOR SIN
  ;  AND COS FUNCTIONS
CORDIC
  ; 900
  FIM R45,  0
  FIM R67,  48 
  JMS TRANSLOOP
  FIM R45,  64 
  FIM R01, MINPI 
  JMS FERT
  FIM R01,  48
  FIM R23,  64 
  JMS ADRT
  ; CARRY >180
  ; PLACE INPUT ANGLE IN FIRST OR FOURTH
  ; QUADRANTS
  RD0
  RAR 
  JCN C, SKIP1
  ; CARRY >180
  FIM R45,  48 
  FIM R01, MIN3PI2 
  JMS FERT
  ;\
  FIM R01,  0
  FIM R23,  48 
  JMS ADRT
  FIM R45,  32 
  FIM R01, MINVK 
  JMS FERT 
  JUN JOIN1
SKIP1
  ; 92A
  FIM R45,  48 
  FIM R01, MINPI2 
  JMS FERT
  FIM R01,  0
  FIM R23,  48 
  JMS ADRT
  FIM R45,  32 
  FIM R01, INVK 
  JMS FERT
  ; TEST INPUT ANGLE FOR DIRECTION OF ROTATION
  ;  AND ROTATE PLUS OR MINUS 45 DEGREES
JOIN1
  ; 93C
  FIM R45,  48 
  FIM R01, A1 
  JMS FERT
  FIM R01,  0
  SRC R01
  RD0
  RAR 
  JCN NC, SKIP2
  ; ???
  FIM R01,  0
  FIM R23,  48 
  JMS ADRT
  FIM R45,  32
  FIM R67,  16 
  JMS TRANSLOOP 
  JUN JOIN2
SKIP2
  ; 957
  FIM R01,  0
  FIM R23,  48 
  JMS SBRT
  FIM R45,  32
  FIM R67,  16 
  JMS TRANSLOOP
  FIM R01,  16 
  JMS CPLRT
  ; DO REST OF ROTATES
JOIN2
  ; 967
  LDM  2
  ;   1 LDM \ WORSE !!!
  XCH RC
  LDM  12
  XCH RA
MLOOP
  ; 96B  ???? 
  JMS SETUP
  XCH RB
LOOPP
  ; 96E
  FIM R01,  0
  SRC R01
  RD0
  RAR 
  JCN NC, SKIPX
  LDM  15
  XCH RD 
  JUN JOINX
SKIPX
  ; 979
  LDM  0
  XCH RD
JOINX
  ; 97B 
  JMS ROTATE 
  ISZ RE, LOOPP 
  ISZ RA, MLOOP
  ; END CORDIC ROTATION MODE,
  ;  RAM 10 HAS COS, RAM 20 HAS SIN
ATLAST
  ; 981
  BBL  0
  ; COMPLEMENTS REGISTER
CPLRT
  ; 982
  CLC
COMPL
  ; 983
  SRC R01
  LDM  6
  ADM
  CMA
  WRM 
  ISZ R1, COMPL
  STC
TENS
  ; 98B
  LDM  0
  SRC R01
  ADM
  DAA
  WRM
  INC R1 
  JCN C, TENS
  SRC R01
  RD0
  RAR
  CMC
  RAL
  WR0
  BBL  0
  ; REM ADDS TWO REGISTERS INTO FIRST
ADRT
  ; 99A
  CLC
ADDR
  ; 99B
  SRC R01
  RDM
  SRC R23
  ADM
  DAA
  SRC R01
  WRM
  INC R3 
  ISZ R1, ADDR
  RD0
  XCH RF
  SRC R23
  RD0
  ADD RF
  SRC R01
  WR0
  BBL  0
  ; SUBTRACTS TWO REGISTERS, ANSWER IN FIRST
SBRT
  ; 9AD
  LDM  10
  XCH RF
  CLB
SUBT
  ; 9B0
  SRC R01
  RDM
  SRC R23
  SBM 
  JCN C, OOK
  ADD RF
  CLC
OOK
  ; 9B8
  CMC
  SRC R01
  WRM
  INC R3 
  ISZ R1, SUBT
  RD0
  XCH RF
  SRC R23
  RD0
  ADD RF
  SRC R01
  WR0
  BBL  0
  ; TRANSFERS CONTENTS OF ONE REGISTER TO ANOTHER
TRANSLOOP
  ; 9C6
  SRC R45
  RDM
  SRC R67
  WRM
  INC R5 
  ISZ R7, TRANSLOOP
  SRC R45
  RD0
  SRC R67
  WR0
  BBL  0
  ORG  $A00
  ; CORDIC VECTORING MODE FOR ARCTAN AND
  ; MODULUS FUNCTION
CORDICAT
  ; ZERO RAM FOR Z IN $00, X IN $10, Y IN $20
  ; R2 VALUE A
  ; R6 VALUE C
  ; R7 VALUE CP
  FIM R01,  0
  CLB
ZEROLOOPAT
  ; A03
  SRC R01
  WRM 
  ISZ R1, ZEROLOOPAT
  WR0
  FIM R45,  32
  FIM R67,  48 
  JMS TRANSLOOP
  SRC R67
  RD0
  RAR 
  JCN NC, SWITCH1
  FIM R01,  48 
  JMS CPLRT
SWITCH1
  ; A17
  FIM R45,  16
  FIM R67,  64 
  JMS TRANSLOOP
  SRC R67
  RD0
  RAR 
  JCN NC, SWITCH2
  FIM R01,  64 
  JMS CPLRT
  ; TEST Y/X TO MAXIMIZE TRUNCATION ERROR
SWITCH2
  ; A26
  FIM R01,  48
  FIM R23,  64 
  JMS SBRT
  SRC R01
  RD0
  RAR 
  JCN C, SWITCH3
  ; nzcy
  ;    A31
  FIM R45,  0 
  FIM R01, MINPI2 
  JMS FERT
  FIM R45,  16
  FIM R67,  48 
  JMS TRANSLOOP
  FIM R01,  32 
  JMS CPLRT
  FIM R45,  32
  FIM R67,  16 
  JMS TRANSLOOP
  FIM R45,  48
  FIM R67,  32 
  JMS TRANSLOOP
  ; ENSURE X POSITIVE
SWITCH3
  ; A4D
  FIM R01,  16
  SRC R01
  RD0
  RAR 
  JCN NC, SWITCH4 
  JMS CPLRT
  FIM R01,  32
  ; C 
  JMS CPLRT
  FIM R45,  48 
  FIM R01, MINPI 
  JMS FERT
  FIM R01,  0
  FIM R23,  48 
  JMS SBRT
  ; TEST Y AND DRIVE TO C, THEN DO REST CP ROTATES
SWITCH4
  ; A66
  LDM  1
  XCH RC
  ; THINK IS C ??//
  LDM  11
  XCH RA
MLOOPAT
  ; A6A 
  JMS SETUP
  XCH RB
  ;  MAYBE RE AND NOT RB
LOOPAT
  ; A6D
  FIM R01,  32
  SRC R01
  RD0
  RAR 
  JCN C, SKIPXAT
  LDM  15
  XCH RD 
  JUN JOINXAT
SKIPXAT
  ; A78
  LDM  0
  ; SHOULD BE 0 ???
  XCH RD
JOINXAT
  ; A7A 
  JMS ROTATE 
  ISZ RE, LOOPAT 
  ISZ RA, MLOOPAT
  ; X= X*I/K
CHECK
  ; A80
  FIM R45,  48 
  FIM R01, INVK 
  JMS FERT
  FIM R45,  48
  ;\
  FIM R23,  16
  FIM R67,  32
  ; C 
  JMS MLRT
  FIM R01,  0
  SRC R01
  RD0
  RAR 
  JCN NC, ATLASTAT
  FIM R45,  48 
  FIM R01, TWOPI 
  JMS FERT
  FIM R01,  0
  FIM R23,  48 
  JMS ADRT
  ; AA1
  ; END CORDIC VECTORING MODE
  ; RAM 00 HAS ARCTAN RAM 10 HAS MODULUS
ATLASTAT
  ; AA1
  BBL  0
  ; ROTATE ROUTINE FOR CORDIC ALGORITHMS
ROTATE
  ; AA2
  FIM R01,  0
  FIM R23,  80
  LD RD 
  JCN Z, SZ 
  JMS ADRT 
  JUN JZ
  ;  ??? NEED TO FIX
SZ
  ; AAD 
  JMS SBRT
JZ
  ; AAF
  FIM R45,  16
  FIM R67,  48 
  JMS TRANSLOOP
  FIM R45,  32
  FIM R67,  64 
  JMS TRANSLOOP
  FIM R23,  64
  LDM  15
  XCH R3
  SRC R23
  RDM
  ; MSD OF 40
  XCH R9
  ; TO R9
  INC R3
  LD RB 
  JCN Z, NOSHIFTX 
  JMS SHIFT
NOSHIFTX
  ; AC8
  FIM R01,  16
  LD RD 
  JCN Z, SX 
  JMS ADRT 
  JUN JX
SX
  ; AD1 
  JMS SBRT
JX
  ; AD3
  FIM R23,  48
  LDM  15
  XCH R3
  SRC R23
  RDM
  XCH R9
  INC R3
  LD RB 
  JCN Z, NOSHIFTY 
  JMS SHIFT
NOSHIFTY
  ; AE0
  FIM R01,  32
  LD RD 
  JCN Z, SY 
  JMS SBRT
  BBL  11
SY
  ; AE8 
  JMS ADRT
  BBL  10
  ; SHIFT  FUNCTION FOR CORDIC ALGORITHHMS
SHIFT
  ; AEB
  LD RB
  XCH R9
MINORLOOP
  ; AED
  SRC R23
  WRM
  INC R3 
  ISZ RB, MINORLOOP
  LD R9
  XCH RB
  BBL  0
  ; BEGIN 2816
  ; B00
  ORG  $B00
  ;  FETCHES CONSTANT FROM rom
  ; R4p is destination
  ; R0p is the sourse
  ; RF & R2 ARE USED
FERT
  ; B00
  LDM  8
  XCH RF
FETCHLOOP
  ; B02
  FIN R23
  XCH R2
  SRC R45
  WRM
  INC R5
  XCH R3
  SRC R45
  WRM
  INC R5 
  ISZ R1, NOINC
  INC R0
NOINC
  ; B0E 
  ISZ RF, FETCHLOOP
  FIN R23
  XCH R2
  SRC R45
  WR0
  BBL  0
  ; 0 ????
  ; CONSTANTS CF 360, -180, -270, -90 DEGREES
TWOPI
  DB $00,$00,$00,$00,$00,$63,$00,$00,$00
  ; 360  2 PI
MINPI
  DB $00,$00,$00,$00,$00,$28,$99,$99,$10
  ; -180  -PI
MIN3PI2
  DB $00,$00,$00,$00,$00,$37,$99,$99,$10
  ; -270  3/2 PI
MINPI2
  DB $00,$00,$00,$00,$00,$19,$99,$99,$10
  ; -90   -1/2 PI
  ; CONSTANTS CF 1/K, -1/K
INVK
  DB $61,$54,$95,$28,$60,$00,$00,$00,$00
  ; 1/K
MINVK
  DB $48,$45,$04,$71,$39,$99,$99,$99,$10
  ; -1/K
  ; ARCTAN
A1
  DB $00,$00,$00,$00,$05,$40,$00,$00,$00
  ; 45
A2
  DB $73,$13,$95,$01,$75,$00,$00,$00,$00
A3
  DB $89,$68,$39,$27,$50,$00,$00,$00,$00
A4
  DB $06,$75,$92,$75,$00,$00,$00,$00,$00
A5
  DB $87,$59,$27,$50,$00,$00,$00,$00,$00
  ; TIME CONVERSTION CONSTANTS B78
DAY
  DB $00,$00,$00,$00,$04,$20,$00,$00,$00
HRSPERMIN
  DB $76,$66,$66,$61,$00,$00,$00,$00,$00
  ; MULTIPLY ROUTINE
MLRT
  ; B8A
  CLB
  XCH R7
  LDM  0
  XCH RE
  LDM  0
ZEROLOOPM
  ; B8F
  SRC R67
  ; ???
  WRM 
  ISZ R7, ZEROLOOPM
  WR0
  LDM  4
  XCH R5
  SRC R23
  RD0
  RAR 
  JCN NC, ML4
  LD R2
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  STC
  LDM  15
  SRC R23
  WR3
ML4
  ; BA5
  RAL
  XCH RF
  SRC R45
  RD0
  RAR 
  JCN NC, ML6
  LD R4
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  STC
  LDM  15
  SRC R45
  WR3
ML6
  ; BB6
  RAL
  CLC
  ADD RF
  SRC R67
  WR0
ML1
  ; BBB
  SRC R45
  RDM
  XCH RF
ML2
  ; BBE
  LD RF 
  JCN Z, ML3
  DAC
  XCH RF
  LDM  5
  XCH R3
  LD RE
  XCH R7 
  JMS MADRT 
  JUN ML2
ML3
  ; BCB
  INC RE 
  ISZ R5, ML1
  SRC R67
  RD0
  RAR 
  JCN NC, ML5
  LDM  0
  WR0
  XCH R1
  LD R6
  XCH R0 
  JMS CPLRT
ML5
  ; BDA
  SRC R23
  RD3 
  JCN Z, ML8
  LD R2
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  LDM  0
  SRC R23
  WR3
ML8
  ; BE7
  SRC R45
  RD3 
  JCN Z, ML7
  LD R4
  XCH R0
  LDM  0
  XCH R1 
  JMS CPLRT
  ; BF1
  LDM  0
  SRC R45
  WR3
ML7
  ; BF4
  BBL  0
  ; SYN A AP B BPP C CP CBASE
  ; BEGIN 3072
  ORG  $C00
  ; SYN
  ; R2 VALUE A
  ; R3 VALUE AP
  ; R3 VALUE CNT
  ; R4 VALUE R
  ; R5 VALUE RP
  ; R6 VALUE C
  ; R7 VALUE CP
  ; R8 VALUE Q
  ; R9 VALUE QP
  ; RA VALUE NN
  ; RB VALUE NP
  ; RC VALUE K
  ; RD VALUE KP
  ; RE VALUE SHIFTA
  ; RF VALUE SHIFTC
MADRT
  ; C00
  CLC
STMAD
  ; C01
  SRC R23
  RDM
  SRC R67
  ADM
  DAA
  WRM 
  ISZ R3, SKIPML
  BBL  0
SKIPML
  ; C0A 
  ISZ R7, STMAD
  BBL  0
  ; DECIMAL DIVISION ROUTINE
  ;  WRITTEN  BY
  ;  G. A. KILDALL
  ;  ASSISTANT PROFESSOR
  ;  NAVAL POSTGRADUATE SCHOOL
  ;  MONTEREY, CALIFORNIA
DECDIV
  ; C0D
  LDM  9
  SRC R23
  WR2
  SRC R67
  WR2
  SRC R89
  WR2
  CLB
ZEROR
  ; C15
  SRC R89
  WRM
  SRC R45
  WRM
  INC R5 
  ISZ R9, ZEROR
  CLB
  XCH RB
LOCATEZERO
  ; C1E
  LD RB
  CMA
  XCH R3
  SRC R23
  RDM 
  JCN NZ, FOUNDZERO 
  ISZ RB, LOCATEZERO 
  JUN ENDDIVIDE
FOUNDZERO
  ; C29
  LD RB
  XCH R5
  CLB
  XCH R3
COPYA
  ; C20
  SRC R23
  RDM
  SRC R45
  WRM
  INC R3 
  ISZ R5, COPYA
  LD RB
  XCH RE
  SRC R23
  RD2
  ADD RB
  XCH RB
  TCC
  XCH RA
  CLB
  XCH RD
LOCATEZERO1
  ; C3E
  LD RD
  CMA
  XCH R7
  SRC R67
  RDM 
  JCN NZ, FOUNDZERO1 
  ISZ RD, LOCATEZERO1
  BBL  1
FOUNDZERO1
  ; C48
  LD RD
  XCH RF
  RD2
  ADD RD
  XCH RD
  TCC
  XCH RC
  SRC R89
  RD2
  ADD RD
  XCH RD
  LDM  0
  ADD RC
  XCH RC
  CLC
  LD RD
  SUB RB
  XCH R9
  CMC
  LD RC
  SUB RA 
  JCN C, NOUNDERF
  BBL  0
NOUNDERF
  ; C60 
  JCN NZ, DOVERFLOW
  LDM  15
  XCH RB
  LD R6
  XCH RA
COPYC1
  ; C66
  SRC R67
  RDM
  SRC RAB
  WRM
  LD R7 
  JCN Z, PASTCOPY1
  DAC
  XCH R7
  LD RB
  DAC
  XCH RB 
  JUN COPYC1
PASTCOPY1
  ; C74
  LD RB 
  JCN Z, DIV
  DAC
  XCH RB
  SRC RAB
  LDM  0
  ; ????
  WRM 
  JUN PASTCOPY1
DIV
  ; C7E
  LDM  10
  XCH RC
SUB0
  ; C80
  CLB
  XCH R3
SUB1
  ; C82
  CLB
  XCH R5
  LD RB
  XCH R7
  SRC R45
SUB2
  ; C87
  RDM
  SRC R67
  ; ?????
  SBM 
  JCN C, COMPLEMENT
  ADD RC
  CLC
COMPLEMENT
  ; C8E
  CMC
  SRC R45
  WRM
  INC R5
  SRC R45 
  ISZ R7, SUB2
  LD R5 
  JCN Z, CHECKCARRY
  RDM
  SUB R7
  WRM
  CMC
CHECKCARRY
  ; C9C 
  JCN C, CARRYOUT
  INC R3 
  JUN SUB1
CARRYOUT
  ; CA1
  LD RB
  XCH R7
  CLB
  XCH R5
ADD4
  ; CA5
  SRC R67
  RDM
  SRC R45
  ADM
  DAA
  WRM
  INC R5 
  ISZ R7, ADD4
  LD R5 
  JCN Z, SKIPADD
  TCC
  SRC R45
  ADM
  WRM
SKIPADD
  ; CB5
  SRC R89
  ; ?? Q
  LD R3
  WRM
  LD R9
  ; ?? Q 
  JCN Z, ENDDIVIDE
  DAC
  XCH R9 
  ISZ RB, SUB0
ENDDIVIDE
  ; CBF
  CLB
  XCH RB
  LD RF
  XCH R7
COPYC2
  ; CC3
  SRC R67
  RDM
  SRC RAB
  WRM
  INC RB 
  ISZ R7, COPYC2
  LD RB 
  JCN Z, PASTFILL
FILLZ
  ; CCD
  SRC RAB
  CLB
  WRM 
  ISZ RB, FILLZ
PASTFILL
  ; CD2
  BBL  0
DOVERFLOW
  ; CD3
  BBL  1
  ; SYN A, AP,CNT,R,RP,C, CP ,Q,QP,N,NP,K KP,SHIFTA,SHIFTC
  ; END  CD4
